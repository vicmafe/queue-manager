{"ast":null,"code":"var _jsxFileName = \"/home/victormateus/Documentos/Docs/Cases/queue-manager/app-queue-manager/src/Pages/ManagerQueue/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '../../Components/Button';\nimport * as S from './style';\nimport ScreenBoard from '../../Components/ScreenPasswords';\nimport Icon from '../../Components/Icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Manager = () => {\n  _s();\n\n  const [status, setStatus] = useState('');\n  const [normalPassword, setNormalPassword] = useState(Number);\n  const [preferentialPassword, setPreferentialPassword] = useState(Number);\n  const [normalAtended, setNormalAtended] = useState(Number);\n  const [preferentialAtended, setPreferentialAtended] = useState(Number);\n  const [screenAtending, setScreenAtended] = useState();\n  const message = 'Oba! sem fila de atendimento.';\n\n  const attendig = () => {\n    if (preferentialPassword && preferentialPassword > preferentialAtended) {\n      const updatePreferentialAtended = preferentialAtended + 1;\n      setPreferentialAtended(updatePreferentialAtended);\n      const screen = atendingView('Preferencial', updatePreferentialAtended);\n      return setScreenAtended(screen);\n    }\n\n    if (normalPassword && normalPassword > normalAtended) {\n      const updateNormalAtended = normalAtended + 1;\n      setNormalAtended(updateNormalAtended);\n      const screen = atendingView('Normal', updateNormalAtended);\n      return setScreenAtended(screen);\n    }\n\n    return setStatus(message);\n  };\n\n  const resetQueue = () => {\n    setNormalPassword(0);\n    setPreferentialPassword(0);\n    setNormalAtended(0);\n    setPreferentialAtended(0);\n    localStorage.clear();\n    return setStatus(message);\n  };\n\n  const updateQueue = () => {\n    localStorage.setItem('normal', normalPassword);\n    localStorage.setItem('normalAtended', normalAtended);\n    localStorage.setItem('preferential', preferentialPassword);\n    localStorage.setItem('preferentialAtended', preferentialAtended);\n  }; // const verifyQueueAtended = () => {\n  //   if (normalPassword === normalAtended && preferentialPassword === preferentialAtended) return setStatus(message);\n  // };\n\n\n  const verifyStorage = () => {\n    if (localStorage.normal && localStorage.preferential) {\n      const storageNormal = Number(localStorage.getItem('normal'));\n      const storagePreferential = Number(localStorage.getItem('preferential'));\n      setNormalPassword(storageNormal);\n      setPreferentialPassword(storagePreferential);\n    }\n\n    if (localStorage.normalAtended && localStorage.preferentialAtended) {\n      const storageNormalAtended = Number(localStorage.getItem('normalAtended'));\n      const storagePreferentialAtended = Number(localStorage.getItem('preferentialAtended'));\n      setNormalAtended(storageNormalAtended);\n      setPreferentialAtended(storagePreferentialAtended);\n    }\n  };\n\n  const atendingView = (queue, password) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(S.SubTitle, {\n        children: \"Pr\\xF3ximo atendimento:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.BoxQueue, {\n        children: [/*#__PURE__*/_jsxDEV(S.SubTitle, {\n          children: \"Fila\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.BoxPassword, {\n          children: queue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.SubTitle, {\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.BoxPassword, {\n          children: [\"N000\", password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  useEffect(() => {\n    verifyStorage(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    updateQueue(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [normalPassword, preferentialPassword, normalAtended, preferentialAtended]);\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [status ? /*#__PURE__*/_jsxDEV(S.Status, {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(S.ButtonStyle, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => attendig(),\n          children: \"Chamar Pr\\xF3ximo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), screenAtending, /*#__PURE__*/_jsxDEV(S.ButtonStyle, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => resetQueue(),\n          children: \"Zerar Senhas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ScreenBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Manager, \"W00E/TDlEhFtRbjRi+xGLqOMVtc=\");\n\n_c = Manager;\nexport default Manager;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manager\");","map":{"version":3,"sources":["/home/victormateus/Documentos/Docs/Cases/queue-manager/app-queue-manager/src/Pages/ManagerQueue/index.jsx"],"names":["React","useState","useEffect","Button","S","ScreenBoard","Icon","Manager","status","setStatus","normalPassword","setNormalPassword","Number","preferentialPassword","setPreferentialPassword","normalAtended","setNormalAtended","preferentialAtended","setPreferentialAtended","screenAtending","setScreenAtended","message","attendig","updatePreferentialAtended","screen","atendingView","updateNormalAtended","resetQueue","localStorage","clear","updateQueue","setItem","verifyStorage","normal","preferential","storageNormal","getItem","storagePreferential","storageNormalAtended","storagePreferentialAtended","queue","password"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAO,KAAKC,CAAZ,MAAmB,SAAnB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAACW,MAAD,CAApD;AACA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAACW,MAAD,CAAhE;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAACW,MAAD,CAAlD;AACA,QAAM,CAACK,mBAAD,EAAsBC,sBAAtB,IAAgDjB,QAAQ,CAACW,MAAD,CAA9D;AACA,QAAM,CAACO,cAAD,EAAiBC,gBAAjB,IAAqCnB,QAAQ,EAAnD;AACA,QAAMoB,OAAO,GAAG,+BAAhB;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACrB,QAAIT,oBAAoB,IAAIA,oBAAoB,GAAGI,mBAAnD,EAAwE;AACtE,YAAMM,yBAAyB,GAAGN,mBAAmB,GAAG,CAAxD;AACAC,MAAAA,sBAAsB,CAACK,yBAAD,CAAtB;AACA,YAAMC,MAAM,GAAGC,YAAY,CAAC,cAAD,EAAiBF,yBAAjB,CAA3B;AACA,aAAOH,gBAAgB,CAACI,MAAD,CAAvB;AACD;;AACD,QAAId,cAAc,IAAIA,cAAc,GAAGK,aAAvC,EAAsD;AACpD,YAAMW,mBAAmB,GAAGX,aAAa,GAAG,CAA5C;AACAC,MAAAA,gBAAgB,CAACU,mBAAD,CAAhB;AACA,YAAMF,MAAM,GAAGC,YAAY,CAAC,QAAD,EAAWC,mBAAX,CAA3B;AACA,aAAON,gBAAgB,CAACI,MAAD,CAAvB;AACD;;AACD,WAAOf,SAAS,CAACY,OAAD,CAAhB;AACD,GAdD;;AAgBA,QAAMM,UAAU,GAAG,MAAM;AACvBhB,IAAAA,iBAAiB,CAAC,CAAD,CAAjB;AACAG,IAAAA,uBAAuB,CAAC,CAAD,CAAvB;AACAE,IAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACAE,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAU,IAAAA,YAAY,CAACC,KAAb;AACA,WAAOpB,SAAS,CAACY,OAAD,CAAhB;AACD,GAPD;;AASA,QAAMS,WAAW,GAAG,MAAM;AACxBF,IAAAA,YAAY,CAACG,OAAb,CAAqB,QAArB,EAA+BrB,cAA/B;AACAkB,IAAAA,YAAY,CAACG,OAAb,CAAqB,eAArB,EAAsChB,aAAtC;AACAa,IAAAA,YAAY,CAACG,OAAb,CAAqB,cAArB,EAAqClB,oBAArC;AACAe,IAAAA,YAAY,CAACG,OAAb,CAAqB,qBAArB,EAA4Cd,mBAA5C;AACD,GALD,CAjCoB,CAwCpB;AACA;AACA;;;AAEA,QAAMe,aAAa,GAAG,MAAM;AAC1B,QAAIJ,YAAY,CAACK,MAAb,IAAuBL,YAAY,CAACM,YAAxC,EAAsD;AACpD,YAAMC,aAAa,GAAGvB,MAAM,CAACgB,YAAY,CAACQ,OAAb,CAAqB,QAArB,CAAD,CAA5B;AACA,YAAMC,mBAAmB,GAAGzB,MAAM,CAACgB,YAAY,CAACQ,OAAb,CAAqB,cAArB,CAAD,CAAlC;AACAzB,MAAAA,iBAAiB,CAACwB,aAAD,CAAjB;AACArB,MAAAA,uBAAuB,CAACuB,mBAAD,CAAvB;AACD;;AACD,QAAIT,YAAY,CAACb,aAAb,IAA8Ba,YAAY,CAACX,mBAA/C,EAAoE;AAClE,YAAMqB,oBAAoB,GAAG1B,MAAM,CAACgB,YAAY,CAACQ,OAAb,CAAqB,eAArB,CAAD,CAAnC;AACA,YAAMG,0BAA0B,GAAG3B,MAAM,CAACgB,YAAY,CAACQ,OAAb,CAAqB,qBAArB,CAAD,CAAzC;AACApB,MAAAA,gBAAgB,CAACsB,oBAAD,CAAhB;AACApB,MAAAA,sBAAsB,CAACqB,0BAAD,CAAtB;AACD;AACF,GAbD;;AAeA,QAAMd,YAAY,GAAG,CAACe,KAAD,EAAQC,QAAR,KAAqB;AACxC,wBACE;AAAA,8BACE,QAAC,CAAD,CAAG,QAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,CAAD,CAAG,QAAH;AAAA,gCACE,QAAC,CAAD,CAAG,QAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,CAAD,CAAG,WAAH;AAAA,oBACGD;AADH;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,CAAD,CAAG,QAAH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,CAAD,CAAG,WAAH;AAAA,6BACOC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAqBD,GAtBD;;AAuBAvC,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,aAAa,GADC,CAEhB;AACC,GAHQ,EAGN,EAHM,CAAT;AAKA9B,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,WAAW,GADG,CAEhB;AACC,GAHQ,EAGN,CAACpB,cAAD,EAAiBG,oBAAjB,EAAuCE,aAAvC,EAAsDE,mBAAtD,CAHM,CAAT;AAIA,sBACE,QAAC,CAAD,CAAG,SAAH;AAAA,eACIT,MAAM,gBACN,QAAC,CAAD,CAAG,MAAH;AAAA,gBACIA;AADJ;AAAA;AAAA;AAAA;AAAA,YADM,gBAKN;AAAA,8BACE,QAAC,CAAD,CAAG,WAAH;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAG,MAAMc,QAAQ,EAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAQGH,cARH,eASE,QAAC,CAAD,CAAG,WAAH;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAG,MAAMQ,UAAU,EAD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA,oBANJ,eAyBE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAxHD;;GAAMpB,O;;KAAAA,O;AA0HN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '../../Components/Button';\nimport * as S from './style';\nimport ScreenBoard from '../../Components/ScreenPasswords';\nimport Icon from '../../Components/Icons'\n\nconst Manager = () => {\n  const [status, setStatus] = useState('');\n  const [normalPassword, setNormalPassword] = useState(Number);\n  const [preferentialPassword, setPreferentialPassword] = useState(Number);\n  const [normalAtended, setNormalAtended] = useState(Number);\n  const [preferentialAtended, setPreferentialAtended] = useState(Number);\n  const [screenAtending, setScreenAtended] = useState();\n  const message = 'Oba! sem fila de atendimento.';\n  const attendig = () => {\n    if (preferentialPassword && preferentialPassword > preferentialAtended) {\n      const updatePreferentialAtended = preferentialAtended + 1;\n      setPreferentialAtended(updatePreferentialAtended);\n      const screen = atendingView('Preferencial', updatePreferentialAtended );\n      return setScreenAtended(screen)\n    }\n    if (normalPassword && normalPassword > normalAtended) {\n      const updateNormalAtended = normalAtended + 1;\n      setNormalAtended(updateNormalAtended);\n      const screen = atendingView('Normal', updateNormalAtended)\n      return setScreenAtended(screen)\n    }\n    return setStatus(message);\n  };\n  \n  const resetQueue = () => {\n    setNormalPassword(0);\n    setPreferentialPassword(0);\n    setNormalAtended(0);\n    setPreferentialAtended(0);\n    localStorage.clear();\n    return setStatus(message);\n  };\n\n  const updateQueue = () => {\n    localStorage.setItem('normal', normalPassword)\n    localStorage.setItem('normalAtended', normalAtended);\n    localStorage.setItem('preferential', preferentialPassword);\n    localStorage.setItem('preferentialAtended', preferentialAtended);\n  };\n\n  // const verifyQueueAtended = () => {\n  //   if (normalPassword === normalAtended && preferentialPassword === preferentialAtended) return setStatus(message);\n  // };\n\n  const verifyStorage = () => {\n    if (localStorage.normal && localStorage.preferential) {\n      const storageNormal = Number(localStorage.getItem('normal'));\n      const storagePreferential = Number(localStorage.getItem('preferential'));\n      setNormalPassword(storageNormal);\n      setPreferentialPassword(storagePreferential);\n    }\n    if (localStorage.normalAtended && localStorage.preferentialAtended) {\n      const storageNormalAtended = Number(localStorage.getItem('normalAtended'));\n      const storagePreferentialAtended = Number(localStorage.getItem('preferentialAtended'));\n      setNormalAtended(storageNormalAtended);\n      setPreferentialAtended(storagePreferentialAtended);\n    }\n  };\n  \n  const atendingView = (queue, password) => {\n    return (\n      <>\n        <S.SubTitle>\n            Próximo atendimento:\n        </S.SubTitle>\n        <S.BoxQueue>\n          <S.SubTitle>\n              Fila\n          </S.SubTitle>\n          <S.BoxPassword>\n            {queue}\n          </S.BoxPassword>\n          <S.SubTitle>\n              Senha\n          </S.SubTitle>\n          <S.BoxPassword>\n            N000{password}\n          </S.BoxPassword>\n        </S.BoxQueue>\n      </>\n    )\n  }\n  useEffect(() => {\n    verifyStorage();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    updateQueue();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [normalPassword, preferentialPassword, normalAtended, preferentialAtended]);\n  return (\n    <S.Container>\n      { status ? \n        <S.Status>\n          { status }\n        </S.Status>\n        :\n        <>\n          <S.ButtonStyle>\n            <Button\n              onClick={ () => attendig() }\n            >\n              Chamar Próximo\n            </Button>\n          </S.ButtonStyle>\n         { screenAtending }\n          <S.ButtonStyle>\n            <Button\n              onClick={ () => resetQueue() }\n            >\n              Zerar Senhas\n            </Button>\n          </S.ButtonStyle>\n          <ScreenBoard />\n        </>\n      }\n      <Icon />\n    </S.Container>\n  )\n};\n\nexport default Manager;\n"]},"metadata":{},"sourceType":"module"}